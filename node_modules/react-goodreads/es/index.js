function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { Component } from 'react';
import axios from 'axios';
import xml2json from 'xml2js';
import Layout from './layout';
import { css } from 'glamor';
var pStyle = css({
  color: 'gray',
  border: '1px dashed #ccc',
  fontSize: '.85em',
  letterSpacing: '.1em',
  textTransform: 'uppercase'
});

var _default = /*#__PURE__*/function (_Component) {
  _inheritsLoose(_default, _Component);

  function _default() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "state", {
      jsonData: [],
      error: null
    });

    return _this;
  }

  var _proto = _default.prototype;

  _proto.componentWillMount = function componentWillMount() {
    var _this2 = this;

    var apiKey = this.props.apikey;
    var config = {
      headers: {
        "X-Requested-With": "XMLHttpRequest"
      }
    };
    axios.get("https://cors-anywhere.herokuapp.com/http://www.goodreads.com/review/list/39704220.xml?key=" + apiKey + "&v=2", config).then(function (response) {
      var data;
      xml2json.parseString(response.data, function (err, result) {
        data = result.GoodreadsResponse.reviews[0].review;
      });

      _this2.setState({
        jsonData: data
      });
    })["catch"](function (error) {
      _this2.setState({
        error: error
      });
    });
  };

  _proto.getRating = function getRating(val) {
    if (val == "1") {
      return '✰';
    } else if (val == "2") {
      return '✰✰';
    } else if (val == "3") {
      return '✰✰✰';
    } else if (val == "4") {
      return '✰✰✰✰';
    } else if (val == "5") {
      return '✰✰✰✰✰';
    } else {
      return 'Not rated yet';
    }
  };

  _proto.getFormattedDate = function getFormattedDate(unformattedDate) {
    return !unformattedDate.isNan ? new Date(unformattedDate).toLocaleString(this.props.locales !== undefined ? this.props.locales : 'en-EN', {
      timeZone: 'UTC'
    }) : 'No Date';
  };

  _proto.render = function render() {
    var _this3 = this;

    var layout = this.state.jsonData.map(function (v, k) {
      return /*#__PURE__*/React.createElement(Layout, {
        key: k,
        name: v.book[0].title,
        cover: v.book[0].image_url,
        url: v.book[0].link,
        started: _this3.getFormattedDate(v.started_at),
        rating: _this3.getRating(v.rating),
        bookCoverTitle: _this3.props.bookCoverTitle,
        bookNameTitle: _this3.props.bookNameTitle,
        startAtTitle: _this3.props.startAtTitle,
        ratingTitle: _this3.props.ratingTitle
      });
    });
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("p", pStyle, this.props.caption !== undefined ? this.props.caption : 'My Goodreads Read Shelf'), layout);
  };

  return _default;
}(Component);

export { _default as default };
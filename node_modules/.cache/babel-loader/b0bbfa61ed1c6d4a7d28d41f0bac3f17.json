{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Angelo\\\\Desktop\\\\Angelo\\\\MAKTUB\\\\web\\\\oh_another_one\\\\src\\\\goodreads.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport xml2json from 'xml2js';\n\nclass Goodreads extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      jsonData: [],\n      error: null\n    };\n  }\n\n  componentWillMount() {\n    const apiKey = \"BJoTpSB7LAEMeNVmibe5WQ\";\n    var config = {\n      headers: {\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      }\n    };\n    axios.get(\"https://cors-anywhere.herokuapp.com/http://www.goodreads.com/review/list/83932463.xml?key=\" + apiKey + \"&v=2\", config).then(response => {\n      let data;\n      xml2json.parseString(response.data, function (err, result) {\n        data = result.GoodreadsResponse.reviews[0].review;\n      });\n      this.setState({\n        jsonData: data\n      });\n    }).catch(error => {\n      this.setState({\n        error: error\n      });\n    });\n  }\n\n  render() {\n    const layout = this.state.jsonData.map((v, k) => {\n      console.log(v.book[0].title, v.book[0].image_url, v.book[0].link);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, this.props.caption !== undefined ? this.props.caption : 'My Goodreads Read Shelf'), layout);\n  }\n\n}\n\nexport default Goodreads;","map":{"version":3,"sources":["C:/Users/Angelo/Desktop/Angelo/MAKTUB/web/oh_another_one/src/goodreads.js"],"names":["React","Component","axios","xml2json","Goodreads","state","jsonData","error","componentWillMount","apiKey","config","headers","get","then","response","data","parseString","err","result","GoodreadsResponse","reviews","review","setState","catch","render","layout","map","v","k","console","log","book","title","image_url","link","props","caption","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,QAArB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCI,KADgC,GACxB;AACNC,MAAAA,QAAQ,EAAC,EADH;AAENC,MAAAA,KAAK,EAAC;AAFA,KADwB;AAAA;;AAMhCC,EAAAA,kBAAkB,GAAE;AAClB,UAAMC,MAAM,GAAG,wBAAf;AACA,QAAIC,MAAM,GAAG;AAACC,MAAAA,OAAO,EAAE;AAAC,4BAAqB;AAAtB;AAAV,KAAb;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAU,+FAA6FH,MAA7F,GAAoG,MAA9G,EAAsHC,MAAtH,EACCG,IADD,CACMC,QAAQ,IAAG;AACf,UAAIC,IAAJ;AACAZ,MAAAA,QAAQ,CAACa,WAAT,CAAqBF,QAAQ,CAACC,IAA9B,EAAoC,UAAUE,GAAV,EAAeC,MAAf,EAAuB;AACzDH,QAAAA,IAAI,GAAGG,MAAM,CAACC,iBAAP,CAAyBC,OAAzB,CAAiC,CAAjC,EAAoCC,MAA3C;AACD,OAFD;AAGA,WAAKC,QAAL,CAAc;AAAChB,QAAAA,QAAQ,EAAES;AAAX,OAAd;AACD,KAPD,EAQCQ,KARD,CAQOhB,KAAK,IAAG;AACb,WAAKe,QAAL,CAAc;AAACf,QAAAA,KAAK,EAACA;AAAP,OAAd;AACD,KAVD;AAWD;;AAEDiB,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKpB,KAAL,CAAWC,QAAX,CAAoBoB,GAApB,CAAwB,CAACC,CAAD,EAAGC,CAAH,KAAO;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,IAAF,CAAO,CAAP,EAAUC,KAAtB,EAA6BL,CAAC,CAACI,IAAF,CAAO,CAAP,EAAUE,SAAvC,EAAkDN,CAAC,CAACI,IAAF,CAAO,CAAP,EAAUG,IAA5D;AACD,KAFc,CAAf;AAIA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKC,KAAL,CAAWC,OAAX,KAAuBC,SAAvB,GAAmC,KAAKF,KAAL,CAAWC,OAA9C,GAAwD,yBAA5D,CADF,EAEGX,MAFH,CADF;AAMD;;AAjC+B;;AAoClC,eAAerB,SAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport xml2json from 'xml2js'\r\n\r\nclass Goodreads extends Component {\r\n  state = {\r\n    jsonData:[],\r\n    error:null\r\n  }\r\n\r\n  componentWillMount(){\r\n    const apiKey = \"BJoTpSB7LAEMeNVmibe5WQ\";\r\n    var config = {headers: {\"X-Requested-With\" : \"XMLHttpRequest\"}};\r\n    axios.get(\"https://cors-anywhere.herokuapp.com/http://www.goodreads.com/review/list/83932463.xml?key=\"+apiKey+\"&v=2\", config)\r\n    .then(response =>{\r\n      let data;\r\n      xml2json.parseString(response.data, function (err, result) {\r\n        data = result.GoodreadsResponse.reviews[0].review\r\n      });\r\n      this.setState({jsonData: data});\r\n    })\r\n    .catch(error =>{\r\n      this.setState({error:error})\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const layout = this.state.jsonData.map((v,k)=>{\r\n      console.log(v.book[0].title, v.book[0].image_url, v.book[0].link)\r\n    })\r\n\r\n    return(\r\n      <div>\r\n        <p>{this.props.caption !== undefined ? this.props.caption : 'My Goodreads Read Shelf'}</p>\r\n        {layout}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Goodreads\r\n"]},"metadata":{},"sourceType":"module"}
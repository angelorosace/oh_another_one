{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Angelo\\\\Desktop\\\\Angelo\\\\MAKTUB\\\\web\\\\oh_another_one\\\\src\\\\goodreads.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport xml2json from 'xml2js';\nimport Bookshelf from './bookshelf.js';\nimport './goodreads.css';\n\nclass Goodreads extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      jsonData: [],\n      error: null\n    };\n  }\n\n  componentWillMount() {\n    const apiKey = \"BJoTpSB7LAEMeNVmibe5WQ\";\n    var config = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    };\n    axios.get(\"http://www.goodreads.com/review/list/83932463.xml?key=\" + apiKey + \"&v=2\").then(response => {\n      let data;\n      xml2json.parseString(response.data, function (err, result) {\n        data = result.GoodreadsResponse.reviews[0].review;\n      });\n      this.setState({\n        jsonData: data\n      });\n    }).catch(error => {\n      this.setState({\n        error: error\n      });\n    });\n  }\n\n  render() {\n    const layout = this.state.jsonData.map((v, k) => {\n      return /*#__PURE__*/React.createElement(Bookshelf, {\n        key: k,\n        bookNameTitle: v.book[0].title,\n        cover: v.book[0].image_url,\n        url: v.book[0].link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"My Goodreads Read Shelf\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table shelf table-hover table-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, layout)));\n  }\n\n}\n\nexport default Goodreads;","map":{"version":3,"sources":["C:/Users/Angelo/Desktop/Angelo/MAKTUB/web/oh_another_one/src/goodreads.js"],"names":["React","Component","axios","xml2json","Bookshelf","Goodreads","state","jsonData","error","componentWillMount","apiKey","config","headers","get","then","response","data","parseString","err","result","GoodreadsResponse","reviews","review","setState","catch","render","layout","map","v","k","book","title","image_url","link"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCK,KADgC,GACxB;AACNC,MAAAA,QAAQ,EAAC,EADH;AAENC,MAAAA,KAAK,EAAC;AAFA,KADwB;AAAA;;AAMhCC,EAAAA,kBAAkB,GAAE;AAClB,UAAMC,MAAM,GAAG,wBAAf;AACA,QAAIC,MAAM,GAAG;AAACC,MAAAA,OAAO,EAAE;AAAC,uCAA+B;AAAhC;AAAV,KAAb;AACAV,IAAAA,KAAK,CAACW,GAAN,CAAU,2DAAyDH,MAAzD,GAAgE,MAA1E,EACCI,IADD,CACMC,QAAQ,IAAG;AACf,UAAIC,IAAJ;AACAb,MAAAA,QAAQ,CAACc,WAAT,CAAqBF,QAAQ,CAACC,IAA9B,EAAoC,UAAUE,GAAV,EAAeC,MAAf,EAAuB;AACzDH,QAAAA,IAAI,GAAGG,MAAM,CAACC,iBAAP,CAAyBC,OAAzB,CAAiC,CAAjC,EAAoCC,MAA3C;AACD,OAFD;AAGA,WAAKC,QAAL,CAAc;AAAChB,QAAAA,QAAQ,EAAES;AAAX,OAAd;AACD,KAPD,EAQCQ,KARD,CAQOhB,KAAK,IAAG;AACb,WAAKe,QAAL,CAAc;AAACf,QAAAA,KAAK,EAACA;AAAP,OAAd;AACD,KAVD;AAWD;;AAEDiB,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKpB,KAAL,CAAWC,QAAX,CAAoBoB,GAApB,CAAwB,CAACC,CAAD,EAAGC,CAAH,KAAO;AAC5C,0BACE,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,CAAhB;AAAmB,QAAA,aAAa,EAAED,CAAC,CAACE,IAAF,CAAO,CAAP,EAAUC,KAA5C;AAAmD,QAAA,KAAK,EAAEH,CAAC,CAACE,IAAF,CAAO,CAAP,EAAUE,SAApE;AAA+E,QAAA,GAAG,EAAEJ,CAAC,CAACE,IAAF,CAAO,CAAP,EAAUG,IAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJc,CAAf;AAMA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE;AAAO,MAAA,SAAS,EAAC,oCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,MADH,CADF,CAFF,CADF;AAUD;;AAvC+B;;AA0ClC,eAAerB,SAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport xml2json from 'xml2js'\r\nimport Bookshelf from './bookshelf.js'\r\nimport './goodreads.css'\r\n\r\nclass Goodreads extends Component {\r\n  state = {\r\n    jsonData:[],\r\n    error:null\r\n  }\r\n\r\n  componentWillMount(){\r\n    const apiKey = \"BJoTpSB7LAEMeNVmibe5WQ\";\r\n    var config = {headers: {\"Access-Control-Allow-Origin\": \"*\"}};\r\n    axios.get(\"http://www.goodreads.com/review/list/83932463.xml?key=\"+apiKey+\"&v=2\")\r\n    .then(response =>{\r\n      let data;\r\n      xml2json.parseString(response.data, function (err, result) {\r\n        data = result.GoodreadsResponse.reviews[0].review\r\n      });\r\n      this.setState({jsonData: data});\r\n    })\r\n    .catch(error =>{\r\n      this.setState({error:error})\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const layout = this.state.jsonData.map((v,k)=>{\r\n      return(\r\n        <Bookshelf key={k} bookNameTitle={v.book[0].title} cover={v.book[0].image_url} url={v.book[0].link}/>\r\n        )\r\n    })\r\n\r\n    return(\r\n      <div>\r\n        <h4 className=\"header\">My Goodreads Read Shelf</h4>\r\n        <table className=\"table shelf table-hover table-dark\">\r\n          <tbody>\r\n            {layout}\r\n          </tbody>\r\n      </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Goodreads\r\n"]},"metadata":{},"sourceType":"module"}